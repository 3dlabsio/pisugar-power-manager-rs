# Hourly build, cache not allowed
name: Hourly build on master

on:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build-all:
    runs-on: ubuntu-latest
    steps:
    # Checkout
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master
    - name: Fix cargo config
      run: sed -e "s/.*replace-with.*//g" -i .cargo/config

    # Nodejs
    - name: Setup Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    # Nodejs dependencies
    - run: npm install
      working-directory: electron
    # Nodejs build web
    - run: npm run build:web
      working-directory: electron

    # Rust musl cross toolchain
    - name: Rust musl cross toolchain
      run: |
        if ! test -d arm-linux-musleabihf-cross/bin; then
          wget https://more.musl.cc/$(uname -m)-linux-musl/arm-linux-musleabihf-cross.tgz
          tar -xvf arm-linux-musleabihf-cross.tgz
        fi
        echo ::set-env name=PATH::$(pwd)/arm-linux-musleabihf-cross/bin:$PATH
    # Rust target arm-unknown-linux-musleabihf
    - name: Rust add arm-unknown-linux-musleabihf target
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: arm-unknown-linux-musleabihf
        override: true
    # Rust install cargo-deb
    - name: Rust install cargo-deb
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-deb
        version: latest
    # Rust cargo deb - pisugar-server
    - uses: actions-rs/cargo@v1
      with:
        command: deb
        args: --target arm-unknown-linux-musleabihf --manifest-path=pisugar-server/Cargo.toml
    # Rust cargo deb - pisugar-poweroff
    - uses: actions-rs/cargo@v1
      with:
        command: deb
        args: --target arm-unknown-linux-musleabihf --manifest-path=pisugar-poweroff/Cargo.toml

    # Upload artifact
    - name: Checkout
      uses: actions/upload-artifact@v1
      with:
        name: pisugar-server-deb
        path: target/arm-unknown-linux-musleabihf/debian

    # Upload QiNiu nightly
    - name: "Upload to QiNiu"
      env:
        QINIU_BUCKET: ${{ secrets.QINIU_BUCKET }}
        QINIU_AK: ${{ secrets.QINIU_AK }}
        QINIU_SK: ${{ secrets.QINIU_SK }}
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip

        if [ $(uname -m) == 'x86_64' ]; then
          wget http://devtools.qiniu.com/qshell-linux-x64-v2.4.1.zip
          unzip qshell-linux-x64-v2.4.1.zip
          mv qshell-linux-x64-v2.4.1 qshell
        else
          wget http://devtools.qiniu.com/qshell-linux-x86-v2.4.1.zip
          unzip qshell-linux-x86-v2.4.1.zip
          mv qshell-linux-x86-v2.4.1 qshell
        fi
        chmod +x qshell
        ./qshell account -w ${QINIU_AK} ${QINIU_SK} deploy-account

        for f in $(find target/arm-unknown-linux-musleabihf -name '*.deb' ); do
          filename=${f##*/}
          key=nightly/${filename}
          ./qshell rput --overwrite ${QINIU_BUCKET} ${key} ${f}
        done