name: "Pre Release"

on:
  push:
    branches:
      - "master"

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"
    steps:
    # Checkout
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master
    - name: Fix cargo config
      run: sed -e "s/.*replace-with.*//g" -i .cargo/config

    # Nodejs
    - name: Setup Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    # Nodejs dependencies
    - run: npm install
      working-directory: electron
    # Nodejs build web
    - run: npm run build:web
      working-directory: electron

    # Rust musl cross toolchain
    - name: Rust musl cross toolchain
      run: |
        if ! test -d arm-linux-musleabihf-cross/bin; then
          wget https://more.musl.cc/$(uname -m)-linux-musl/arm-linux-musleabihf-cross.tgz
          tar -xvf arm-linux-musleabihf-cross.tgz
        fi
        echo ::set-env name=PATH::$(pwd)/arm-linux-musleabihf-cross/bin:$PATH
    # Rust target arm-unknown-linux-musleabihf
    - name: Rust add arm-unknown-linux-musleabihf target
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: arm-unknown-linux-musleabihf
        override: true
    # Rust install cargo-deb
    - name: Rust install cargo-deb
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-deb
        version: latest
        use-tool-cache: true
    # Rust cargo deb - pisugar-server
    - uses: actions-rs/cargo@v1
      with:
        command: deb
        args: --target arm-unknown-linux-musleabihf --manifest-path=pisugar-server/Cargo.toml
    # Rust cargo deb - pisugar-poweroff
    - uses: actions-rs/cargo@v1
      with:
        command: deb
        args: --target arm-unknown-linux-musleabihf --manifest-path=pisugar-poweroff/Cargo.toml

    # Upload artifact
    - name: Checkout
      uses: actions/upload-artifact@v1
      with:
        name: pisugar-server-deb
        path: target/arm-unknown-linux-musleabihf/debian

    # Development Release
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          LICENSE
          CHANGELOG
          target/arm-unknown-linux-musleabihf/debian/*

    - name: "Upload to QiNiu"
      env:
        QINIU_BUCKET: ${{ secrets.QINIU_BUCKET }}
        QINIU_AK: ${{ secrets.QINIU_AK }}
        QINIU_SK: ${{ secrets.QINIU_SK }}
      run: |
        sudo apt-get install -y openjdk-11-jre
        if [ $(uname -m) == 'x86_64' ]; then
          wget -O qsuits http://devtools.qiniu.com/qsuits_linux_amd64
        else
          wget -O qsuits http://devtools.qiniu.com/qsuits_linux_386
        fi
        chmod +x qsuits

        curl https://api.github.com/repos/PiSugar/pisugar-power-manager-rs/releases/latest > latest

        sudo apt-get install -y jq
        for url in $(jq '.assets[].browser_download_url' latest); do
          url=$(echo $url | awk -F '"' '{print $2}')
          filename=${url##*/}
          wget -O ${filename} ${url}
          ./qsuits -process=qupload -path=${filename} -s -ak=${QINIU_AK} -sk=${QINIU_SK} -bucket=${QINIU_BUCKET} -key=${filename}
        done