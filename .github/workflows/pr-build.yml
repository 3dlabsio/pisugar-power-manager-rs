name: PR build on master branch

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  nodejs-build:
    runs-on: ubuntu-latest
    steps:
    # Checkout
    - name: Checkout
      uses: actions/checkout@v2
    # Nodejs
    - name: Setup Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    # Nodejs cache
    - name: Nodejs npm cache
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Nodejs dist
    - name: Nodejs dist cache
      uses: actions/cache@v1
      env:
        cache-name: cache-node-dist
      with:
        path: electron/dist
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Nodejs dependencies
    - run: npm install
      working-directory: electron
    # Nodejs build web
    - run: npm run build:web
      working-directory: electron
    # Upload stage result
    - uses: actions/upload-artifact@v1
      with:
          name: pisugar-server-web
          path: electron/dist

  rust-build:
    runs-on: ubuntu-latest
    steps:
    # Check out
    - name: Checkout
      uses: actions/checkout@v2
    # Rust cache
    - name: Rust cargo cache
      uses: actions/cache@v1
      env:
        cache-name: cache-rust-cargo
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Rust target cache
    - name: Rust target cache
      uses: actions/cache@v1
      env:
        cache-name: cache-rust-target
      with:
        path: target
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Rust target arm-unknown-linux-gnueabihf
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: arm-unknown-linux-gnueabihf
        override: true
    # Rust cross build
    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target arm-unknown-linux-gnueabihf --release
    # Upload stage result
    - uses: actions/upload-artifact@v1
      with:
          name: pisugar-server
          path: target/release/pisugar-server

  deb-packaging:
    runs-on: ubuntu-latest
    needs: [nodejs-build, rust-build]
    steps:
    # Checkout
    - uses: actions/checkout@v2
    # Nodejs dist
    - name: Nodejs dist cache
      uses: actions/cache@v1
      env:
        cache-name: cache-node-dist
      with:
        path: electron/dist
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Rust cache
    - name: Rust cargo cache
      uses: actions/cache@v1
      env:
        cache-name: cache-rust-cargo
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Rust target cache
    - name: Rust target cache
      uses: actions/cache@v1
      env:
        cache-name: cache-rust-target
      with:
        path: target
        key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ env.cache-name }}-
          ${{ runner.os }}-cache-
          ${{ runner.os }}-
    # Now, correct the build directory
    - run: |
        mkdir -p target/arm-unknown-linux-gnueabihf/release
        cp -rf target/release/* target/arm-unknown-linux-gnueabihf/release/
    # Rust install cargo-deb
    - name: Install cargo-deb
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-deb
        version: latest
    # Rust cargo deb
    - uses: actions-rs/cargo@v1
      with:
        command: deb
        args: --target arm-unknown-linux-gnueabihf --manifest-path=pisugar-server/Cargo.toml --no-build --no-strip
    # Upload artifact
    - name: Checkout
      uses: actions/upload-artifact@v1
      with:
        name: pisugar-server-deb
        path: target/arm-unknown-linux-gnueabihf/debian